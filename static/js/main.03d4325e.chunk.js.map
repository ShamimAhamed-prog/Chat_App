{"version":3,"sources":["components/LoginForm.jsx","components/MessageForm.jsx","components/MyMessage.jsx","components/TheirMessage.jsx","components/ChatFeed.jsx","App.js","index.js"],"names":["LoginForm","useState","username","setUsername","password","setPassword","handleSubmit","e","a","preventDefault","authObject","axios","get","headers","localStorage","setItem","window","location","reload","className","onSubmit","type","value","onChange","target","placeholder","required","align","MessageForm","props","setValue","chatId","creds","event","text","trim","length","sendMessage","isTyping","htmlFor","PictureOutlined","multiple","id","style","display","files","bind","SendOutlined","MyMessage","message","attachments","src","file","alt","float","marginRight","color","backgroundColor","TheirMessage","lastMessage","isFirstMessageByUser","sender","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","renderMessages","keys","Object","key","lastMessageKey","width","title","height","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","ReactDOM","render","document","getElementById"],"mappings":"0OA0CgBA,EAvCE,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACfC,EADe,KACLC,EADK,OAEUF,mBAAS,IAFnB,mBAEfG,EAFe,KAELC,EAFK,KAKhBC,EAAY,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACnBD,EAAEE,iBAEIC,EAAa,CAAE,aAAc,uCAAwC,YAAYR,EAAW,cAAcE,GAH7F,kBAMXO,IAAMC,IAAI,kCAAmC,CAAEC,QAASH,IAN7C,OAQjBI,aAAaC,QAAQ,WAAYb,GACjCY,aAAaC,QAAQ,WAAYX,GAEhCY,OAAOC,SAASC,SAXA,4GAAH,sDAgBlB,OACE,qBAAKC,UAAU,UAAf,SACE,sBAAKA,UAAU,OAAf,UACE,oBAAIA,UAAU,QAAd,8BACA,uBAAMC,SAAUd,EAAhB,UACE,uBAAOe,KAAK,OAAOC,MAAOpB,EAAUqB,SAAU,SAAChB,GAAD,OAAOJ,EAAYI,EAAEiB,OAAOF,QAAQH,UAAU,QAAQM,YAAY,WAAWC,UAAQ,IACnI,uBAAOL,KAAK,WAAWC,MAAOlB,EAAUmB,SAAU,SAAChB,GAAD,OAAOF,EAAYE,EAAEiB,OAAOF,QAAQH,UAAU,QAAQM,YAAY,WAAWC,UAAQ,IACvI,qBAAKC,MAAM,SAAX,SACE,wBAAQN,KAAK,SAASF,UAAU,SAAhC,SACE,+D,kBCuBCS,EApDK,SAACC,GAAW,IAAD,EACH5B,mBAAS,IADN,mBACtBqB,EADsB,KACfQ,EADe,KAErBC,EAAkBF,EAAlBE,OAAQC,EAAUH,EAAVG,MAQV1B,EAAe,SAAC2B,GACpBA,EAAMxB,iBAEN,IAAMyB,EAAOZ,EAAMa,OAEfD,EAAKE,OAAS,GAAGC,YAAYL,EAAOD,EAAQ,CAAEG,SAGlDJ,EAAS,KAOX,OACE,uBAAMX,UAAU,eAAeC,SAAUd,EAAzC,UACE,uBACEa,UAAU,gBACVM,YAAY,oBACZH,MAAOA,EACPC,SA3Be,SAACU,GACpBH,EAASG,EAAMT,OAAOF,OAEtBgB,YAAST,EAAOE,IAyBZX,SAAUd,IAEZ,uBAAOiC,QAAQ,gBAAf,SACE,sBAAMpB,UAAU,eAAhB,SACE,cAACqB,EAAA,EAAD,CAAiBrB,UAAU,qBAG/B,uBACEE,KAAK,OACLoB,UAAU,EACVC,GAAG,gBACHC,MAAO,CAAEC,QAAS,QAClBrB,SAvBe,SAACU,GACpBI,YAAYL,EAAOD,EAAQ,CAAEc,MAAOZ,EAAMT,OAAOqB,MAAOX,KAAM,MAsBnCY,K,aAEzB,wBAAQzB,KAAK,SAASF,UAAU,cAAhC,SACE,cAAC4B,EAAA,EAAD,CAAc5B,UAAU,oBChCjB6B,EAnBE,SAAC,GAAgB,IAAD,EAAbC,EAAa,EAAbA,QAChB,OAAW,OAAPA,QAAO,IAAPA,GAAA,UAAAA,EAASC,mBAAT,eAAsBd,QAAS,EAE7B,qBACEe,IAAKF,EAAQC,YAAY,GAAGE,KAC5BC,IAAI,qBACJlC,UAAU,gBACVwB,MAAO,CAAEW,MAAO,WAKxB,qBAAKnC,UAAU,UAAUwB,MAAO,CAAEW,MAAO,QAASC,YAAa,OAAQC,MAAO,QAASC,gBAAiB,WAAxG,SACGR,EAAQf,QCeAwB,EA5BK,SAAC,GAA6B,IAAD,EAA1BC,EAA0B,EAA1BA,YAAaV,EAAa,EAAbA,QAC9BW,GAAwBD,GAAeA,EAAYE,OAAO3D,WAAa+C,EAAQY,OAAO3D,SAExF,OACI,sBAAKiB,UAAU,cAAf,UACCyC,GACC,qBACEzC,UAAU,iBACVwB,MAAO,CAAEmB,gBAAiBb,EAAQY,QAAR,cAAyBZ,EAAQY,OAAOE,OAAxC,SAG1B,OAAPd,QAAO,IAAPA,GAAA,UAAAA,EAASC,mBAAT,eAAsBd,QAAS,EAEtB,qBACEe,IAAKF,EAAQC,YAAY,GAAGE,KAC5BC,IAAI,qBACJlC,UAAU,gBACVwB,MAAO,CAAEqB,WAAYJ,EAAuB,MAAQ,UAGpD,qBAAKzC,UAAU,UAAUwB,MAAO,CAAEW,MAAO,OAAQG,gBAAiB,UAAWO,WAAYJ,EAAuB,MAAQ,QAAxH,SACCX,EAAQf,WCwCV+B,EA1DC,SAACpC,GAAU,IACfqC,EAA0CrC,EAA1CqC,MAAOC,EAAmCtC,EAAnCsC,WAAYC,EAAuBvC,EAAvBuC,SAAUC,EAAaxC,EAAbwC,SAC/BC,EAAOJ,GAASA,EAAMC,GAEtBI,EAAqB,SAACtB,EAASuB,GACjC,OAAOF,EAAKG,OAAOC,KAAI,SAACC,EAAQC,GAAT,aAAmBD,EAAOE,YAAc5B,EAAQP,IACvE,qBAEEvB,UAAU,eACVwB,MAAO,CACLW,MAAOkB,EAAc,QAAU,OAC/BV,gBAAgB,OAAD,cAAQa,QAAR,IAAQA,GAAR,UAAQA,EAAQA,cAAhB,aAAQ,EAAgBZ,OAAxB,OALnB,eACea,QASbE,EAAiB,WACnB,IAAMC,EAAOC,OAAOD,KAAKV,GACzB,OAAOU,EAAKL,KAAI,SAACO,EAAKL,GAClB,IAAM3B,EAAUoB,EAASY,GACnBC,EAA2B,IAAVN,EAAc,KAAOG,EAAKH,EAAQ,GACnDJ,EAAcJ,IAAanB,EAAQY,OAAO3D,SAEhD,OACI,sBAA0ByC,MAAO,CAAEwC,MAAO,QAA1C,UACN,qBAAKhE,UAAU,gBAAf,SACGqD,EACG,cAAC,EAAD,CAAWvB,QAASA,IACpB,cAAC,EAAD,CAAcA,QAASA,EAASU,YAAaU,EAASa,OAE5D,qBAAK/D,UAAU,gBAAgBwB,MAAO,CAAEY,YAAaiB,EAAc,OAAS,MAAOR,WAAYQ,EAAc,MAAQ,QAArH,SACED,EAAmBtB,EAASuB,OAPxB,cAAiBI,QAe7B,OADAE,IACKR,EAED,sBAAKnD,UAAU,YAAf,UACA,sBAAKA,UAAU,uBAAf,UACE,qBAAKA,UAAU,aAAf,gBAA6BmD,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAMc,QACnC,qBAAKjE,UAAU,gBAAf,SACGmD,EAAKG,OAAOC,KAAI,SAACC,GAAD,iBAAgBA,EAAOA,OAAOzE,kBAGlD4E,IACD,qBAAKnC,MAAO,CAAE0C,OAAQ,WACtB,qBAAKlE,UAAU,yBAAf,SACE,cAAC,EAAD,2BAAiBU,GAAjB,IAAwBE,OAAQoC,UAZpB,WCzBNmB,EAbJ,WACP,OAAIxE,aAAayE,QAAQ,YAErB,cAAC,IAAD,CACAF,OAAO,QACPG,UAAU,uCACVpB,SAAUtD,aAAayE,QAAQ,YAC/BE,WAAY3E,aAAayE,QAAQ,YACjCG,eAAiB,SAACC,GAAD,OAAkB,cAAC,EAAD,eAAeA,OAPV,cAAC,EAAD,KCAjDC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.03d4325e.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst LoginForm = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  //const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const authObject = { 'Project-ID': \"8bb6748f-b831-4963-82dd-1ba1a0480e2c\", 'User-Name':username , 'User-Secret':password };\r\n\r\n    try {\r\n      await axios.get('https://api.chatengine.io/chats', { headers: authObject });\r\n\r\n      localStorage.setItem('username', username);\r\n      localStorage.setItem('password', password);\r\n\r\n       window.location.reload();\r\n    } catch (error) {\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"form\">\r\n        <h1 className=\"title\">Chat Application</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"input\" placeholder=\"Username\" required />\r\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"input\" placeholder=\"Password\" required />\r\n          <div align=\"center\">\r\n            <button type=\"submit\" className=\"button\">\r\n              <span>Start chatting</span>\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n};\r\n export default LoginForm;","import { useState } from 'react';\r\nimport { SendOutlined, PictureOutlined } from '@ant-design/icons';\r\nimport { sendMessage, isTyping } from 'react-chat-engine';\r\n\r\nconst MessageForm = (props) => {\r\n  const [value, setValue] = useState('');\r\n  const { chatId, creds } = props;\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n\r\n    isTyping(props, chatId);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const text = value.trim();\r\n\r\n    if (text.length > 0) sendMessage(creds, chatId, { text });\r\n    \r\n\r\n    setValue('');\r\n  };\r\n\r\n  const handleUpload = (event) => {\r\n    sendMessage(creds, chatId, { files: event.target.files, text: '' });\r\n  };\r\n\r\n  return (\r\n    <form className=\"message-form\" onSubmit={handleSubmit}>\r\n      <input\r\n        className=\"message-input\"\r\n        placeholder=\"Send a message...\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        onSubmit={handleSubmit}\r\n      />\r\n      <label htmlFor=\"upload-button\">\r\n        <span className=\"image-button\">\r\n          <PictureOutlined className=\"picture-icon\" />\r\n        </span>\r\n      </label>\r\n      <input\r\n        type=\"file\"\r\n        multiple={false}\r\n        id=\"upload-button\"\r\n        style={{ display: 'none' }}\r\n        onChange={handleUpload.bind(this)}\r\n      />\r\n      <button type=\"submit\" className=\"send-button\">\r\n        <SendOutlined className=\"send-icon\" />\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\nexport default MessageForm;","const MyMessage =({ message }) =>{\r\n    if (message?.attachments?.length > 0) {\r\n        return (\r\n          <img\r\n            src={message.attachments[0].file}\r\n            alt=\"message-attachment\"\r\n            className=\"message-image\"\r\n            style={{ float: 'right' }}\r\n          />\r\n    );\r\n}\r\nreturn (\r\n    <div className=\"message\" style={{ float: 'right', marginRight: '18px', color: 'white', backgroundColor: '#3B2A50' }}>\r\n      {message.text}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default MyMessage;","const TheirMessage =({ lastMessage, message }) =>{\r\nconst isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n  \r\n    return(\r\n        <div className=\"message-row\">\r\n        {isFirstMessageByUser && (\r\n          <div\r\n            className=\"message-avatar\"\r\n            style={{ backgroundImage: message.sender && `url(${message.sender.avatar})` }}\r\n          />\r\n    )}\r\n    {message?.attachments?.length > 0\r\n        ?(\r\n              <img\r\n                src={message.attachments[0].file}\r\n                alt=\"message-attachment\"\r\n                className=\"message-image\"\r\n                style={{ marginLeft: isFirstMessageByUser ? '4px' : '48px' }}\r\n              />\r\n              ): (\r\n                <div className=\"message\" style={{ float: 'left', backgroundColor: '#CABCDC', marginLeft: isFirstMessageByUser ? '4px' : '48px' }}>\r\n                {message.text}\r\n              </div>\r\n              )\r\n}\r\n     </div>\r\n    );\r\n        }\r\nexport default TheirMessage;","import MessageForm from './MessageForm';\r\nimport MyMessage from './MyMessage';\r\nimport TheirMessage from './TheirMessage'\r\nconst ChatFeed =(props) =>{\r\n    const { chats, activeChat, userName, messages } = props;\r\n    const chat = chats && chats[activeChat];\r\n\r\n    const renderReadReceipts = (message, isMyMessage) => {\r\n        return chat.people.map((person, index) => person.last_read === message.id && (\r\n        <div\r\n          key={`read_${index}`}\r\n          className=\"read-receipt\"\r\n          style={{\r\n            float: isMyMessage ? 'right' : 'left',\r\n            backgroundImage:`url(${person?.person?.avatar})`\r\n          }}\r\n        />\r\n        ));\r\n     }\r\n    const renderMessages = () => {\r\n        const keys = Object.keys(messages);\r\n        return keys.map((key, index) => {\r\n            const message = messages[key];\r\n            const lastMessageKey = index === 0 ? null : keys[index - 1];\r\n            const isMyMessage = userName === message.sender.username;\r\n            \r\n            return(\r\n                <div key={`msg_${index}`} style={{ width: '100%' }}>\r\n          <div className=\"message-block\">\r\n            {isMyMessage\r\n              ? <MyMessage message={message} />\r\n              : <TheirMessage message={message} lastMessage={messages[lastMessageKey]} />}\r\n          </div>\r\n          <div className=\"read-receipts\" style={{ marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px' }}>\r\n           {renderReadReceipts(message, isMyMessage)} \r\n          </div>\r\n        </div>\r\n            );\r\n\r\n        });\r\n      };\r\n    renderMessages()\r\n    if (!chat) return 'Loading';\r\n    return(\r\n        <div className=\"chat-feed\">\r\n        <div className=\"chat-title-container\">\r\n          <div className=\"chat-title\">{chat?.title}</div>\r\n          <div className=\"chat-subtitle\">\r\n            {chat.people.map((person) => ` ${person.person.username}`)}\r\n          </div>\r\n        </div>\r\n        {renderMessages()}\r\n        <div style={{ height: '100px' }} />\r\n        <div className=\"message-form-container\">\r\n          <MessageForm {...props} chatId={activeChat} />\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ChatFeed;","import {ChatEngine} from 'react-chat-engine';\r\nimport './App.css'\r\nimport LoginForm from './components/LoginForm';\r\nimport ChatFeed from './components/ChatFeed';\r\n const App= () =>{\r\n     if(!localStorage.getItem('username'))return <LoginForm />\r\n     return (\r\n         <ChatEngine\r\n         height=\"100vh\"\r\n         projectID=\"8bb6748f-b831-4963-82dd-1ba1a0480e2c\"\r\n         userName={localStorage.getItem('username')}\r\n         userSecret={localStorage.getItem('password')}\r\n         renderChatFeed ={(chatAppProps) => <ChatFeed {... chatAppProps}/>}\r\n/>\r\n     );\r\n     }\r\n\r\n export default App;"," import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}